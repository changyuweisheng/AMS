<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:aop="http://www.springframework.org/schema/aop"  
        xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:tx="http://www.springframework.org/schema/tx"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xsi:schemaLocation="   
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd">  
            
    <context:component-scan base-package="com.cn.service"/> 
    <context:component-scan base-package="com.cn.dao"/>  
    
    <!-- 读取数据库配置文件 -->
    <context:property-placeholder location="classpath:database.properties"/>
    
    <!-- JNDI获取数据源(使用dbcp连接池) -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
    		<property name="driverClassName" value="${driver}" />  
			<property name="url" value="${url}" />  
			<property name="username" value="${user}" />  
			<property name="password" value="${password}" />
			<!-- 数据库连接池在初始化连接时，第一次就要创建的连接个数 -->
			<property name="initialSize" value="${initialSize}"/>
			<!-- 定义连接池中同时连接的最大连接数，默认8 -->
			<property name="maxActive" value="${maxActive}"/>
			<!-- 定义连接池中可允许的最大空闲连接数，默认8 -->
			<property name="maxIdle" value="${maxIdle}"/>
			<!-- 定义连接池中的最小空闲连接数，默认0 -->
			<property name="minIdle" value="${minIdle}"/>
			<!-- 最大等待时间 -->
			<property name="maxWait" value="${maxWait}"/>
			<!-- 当开启了无用连接池回收机制后，配置该项，可以控制连接池在超出配置时间后回收没有用的连接 -->
			<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
			<!-- 定义该配置项的作用是告诉连接池是否开启无用连接回收机制，默认false -->
			<property name="removeAbandoned" value="${removeAbandoned}"/>
			
			<!-- sql 心跳 
			配置SQL心跳指在校验连接的同时，解决数据库重新连接的问题，从而确保连接池中的连接是真实有效的。
			-->
			
			
			<!-- 定义开启Evict的定时校验 -->
			<property name= "testWhileIdle" value="true"/>
			<!-- 定义在进行brrowObject处理时，对拿到的连接是否进行校验 -->
			<property name= "testOnBorrow" value="false"/>
			<!-- 定义在returnObject时，对返回的连接是否进行校验 -->
			<property name= "testOnReturn" value="false"/>
			<!-- 定义校验使用的SQL语句是否有效 -->
			<property name= "validationQuery" value="select 1"/>
			<!-- 定义Evict时间间隔 -->
			<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
			<!-- 定义每次校验连接的数量 -->
			<property name= "numTestsPerEvictionRun" value="${maxActive}"/>
    </bean>
    
    <!-- 事务管理 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="dataSource"/>
   	</bean> 
   	
   	<!-- 配置mybitas SqlSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    
   	<!-- AOP 事务处理 开始 -->    
	<aop:aspectj-autoproxy />
	<aop:config  proxy-target-class="true">
		<aop:pointcut expression="execution(* *com.cn.service..*(..))" id="transService"/>
		<aop:advisor pointcut-ref="transService" advice-ref="txAdvice" />
	</aop:config> 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	       <tx:method name="smbms*"  propagation="REQUIRED" rollback-for="Exception"  />
	    </tx:attributes>  
	</tx:advice> 
	<!-- AOP 事务处理 结束 -->
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
         <property name="basePackage" value="com.cn.dao" />  
    </bean>
    
</beans>